/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.gbif.cube.gmap.density.model.test;  
@SuppressWarnings("all")
public class Tile extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Tile\",\"namespace\":\"org.gbif.cube.gmap.density.model.test\",\"fields\":[{\"name\":\"cells\",\"type\":{\"type\":\"map\",\"values\":\"int\"}}]}");
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.Integer> cells;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return cells;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: cells = (java.util.Map<java.lang.CharSequence,java.lang.Integer>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'cells' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.Integer> getCells() {
    return cells;
  }

  /**
   * Sets the value of the 'cells' field.
   * @param value the value to set.
   */
  public void setCells(java.util.Map<java.lang.CharSequence,java.lang.Integer> value) {
    this.cells = value;
  }

  /** Creates a new Tile RecordBuilder */
  public static org.gbif.cube.gmap.density.model.test.Tile.Builder newBuilder() {
    return new org.gbif.cube.gmap.density.model.test.Tile.Builder();
  }
  
  /** Creates a new Tile RecordBuilder by copying an existing Builder */
  public static org.gbif.cube.gmap.density.model.test.Tile.Builder newBuilder(org.gbif.cube.gmap.density.model.test.Tile.Builder other) {
    return new org.gbif.cube.gmap.density.model.test.Tile.Builder(other);
  }
  
  /** Creates a new Tile RecordBuilder by copying an existing Tile instance */
  public static org.gbif.cube.gmap.density.model.test.Tile.Builder newBuilder(org.gbif.cube.gmap.density.model.test.Tile other) {
    return new org.gbif.cube.gmap.density.model.test.Tile.Builder(other);
  }
  
  /**
   * RecordBuilder for Tile instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Tile>
    implements org.apache.avro.data.RecordBuilder<Tile> {

    private java.util.Map<java.lang.CharSequence,java.lang.Integer> cells;

    /** Creates a new Builder */
    private Builder() {
      super(org.gbif.cube.gmap.density.model.test.Tile.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.gbif.cube.gmap.density.model.test.Tile.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Tile instance */
    private Builder(org.gbif.cube.gmap.density.model.test.Tile other) {
            super(org.gbif.cube.gmap.density.model.test.Tile.SCHEMA$);
      if (isValidValue(fields()[0], other.cells)) {
        this.cells = (java.util.Map<java.lang.CharSequence,java.lang.Integer>) data().deepCopy(fields()[0].schema(), other.cells);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'cells' field */
    public java.util.Map<java.lang.CharSequence,java.lang.Integer> getCells() {
      return cells;
    }
    
    /** Sets the value of the 'cells' field */
    public org.gbif.cube.gmap.density.model.test.Tile.Builder setCells(java.util.Map<java.lang.CharSequence,java.lang.Integer> value) {
      validate(fields()[0], value);
      this.cells = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'cells' field has been set */
    public boolean hasCells() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'cells' field */
    public org.gbif.cube.gmap.density.model.test.Tile.Builder clearCells() {
      cells = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public Tile build() {
      try {
        Tile record = new Tile();
        record.cells = fieldSetFlags()[0] ? this.cells : (java.util.Map<java.lang.CharSequence,java.lang.Integer>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
